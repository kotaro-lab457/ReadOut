{"version":3,"file":"index.b16dd51c.js","sources":["../../vite/modulepreload-polyfill","../../src/config/Firebase.ts","../../src/stores/userSlice.ts","../../src/Auth/AuthService.tsx","../../src/img/PR2_Img.png","../../src/img/PR_Img.png","../../src/ui/atoms/font.tsx","../../src/ui/atoms/image.tsx","../../src/ui/atoms/button.tsx","../../src/ui/atoms/title.tsx","../../src/ui/molecules/TableLogin.tsx","../../src/ui/molecules/TableTop.tsx","../../src/img/Book_Img.jpg","../../src/ui/organisms/MainPages.tsx","../../src/pages/Top.tsx","../../src/ui/atoms/input.tsx","../../src/ui/molecules/TableSetUp.tsx","../../src/pages/SetUp.tsx","../../src/pages/Login.tsx","../../src/ui/molecules/TableHome.tsx","../../src/components/Comments.tsx","../../src/ui/molecules/TableProfile.tsx","../../src/pages/Home.tsx","../../src/components/Chart.tsx","../../src/components/Count.tsx","../../src/pages/Profile.tsx","../../src/ui/molecules/TableSearch.tsx","../../src/pages/BooksSearch.tsx","../../src/ui/molecules/TableReset.tsx","../../src/pages/ResetPass.tsx","../../src/components/Edit.tsx","../../src/components/List.tsx","../../src/pages/History.tsx","../../src/ui/atoms/link.tsx","../../src/ui/molecules/TableMenu.tsx","../../src/components/Menu.tsx","../../src/ui/organisms/MainTable.tsx","../../src/components/Header.tsx","../../src/components/Footer.tsx","../../src/ui/templates/Table.tsx","../../src/router/index.tsx","../../src/stores/store.ts","../../src/index.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/app\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyBehENZGmPCb7IjGGaaJoZws8iAVvzHMQc\",\n  authDomain: \"my-portfolio-986db.firebaseapp.com\",\n  databaseURL: \"my-portfolio-986db\",\n  projectId: \"my-portfolio-986db\",\n  storageBucket: \"my-portfolio-986db.appspot.com\",\n  messagingSenderId: \"1044178099208\",\n  appId: \"1:1044178099208:web:6503ba091332208d6545bd\",\n  measurementId: \"G-GLV1SQT78Z\",\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"./store\";\n\ninterface USER {\n  displayName: string;\n}\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: { uid: \"\", displayName: \"\" },\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = { uid: \"\", displayName: \"\" };\n    },\n    updateUserProfile: (state, action: PayloadAction<USER>) => {\n      state.user.displayName = action.payload.displayName;\n    },\n  },\n});\n\nexport const { login, logout, updateUserProfile } = userSlice.actions;\nexport const selectUser = (state: RootState) => state.user.user;\nexport default userSlice.reducer;\n","import React, { useEffect } from \"react\";\nimport firebase from \"../config/Firebase\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser, login, logout } from \"../stores/userSlice\";\nimport { userContext } from \"@Modules\"\n\nconst AuthContext = React.createContext<userContext>({\n  displayName: \"\",\n  uid: \"\",\n});\n\n// children は親コンポーネントのタグの間に入った要素を表示する\n// つまり、<AuthService>というタグの間にブラウザに表示しているリンク\n\nconst AuthService: React.FC = ({ children }) => {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const unSub = firebase.auth().onAuthStateChanged((authUser) => {\n      if (authUser) {\n        dispatch(\n          login({\n            uid: authUser.uid,\n            displayName: authUser.displayName,\n          })\n        );\n      } else {\n        dispatch(logout());\n      }\n    });\n    return () => {\n      unSub();\n    };\n  }, [dispatch]);\n  return (\n    <>\n      <AuthContext.Provider value={user}>{children}</AuthContext.Provider>\n    </>\n  );\n};\n\nexport { AuthService };\n","export default \"__VITE_ASSET__87f2e1ad__\"","export default \"__VITE_ASSET__f8e9260d__\"","import styled from \"styled-components\";\n\nconst Font = styled.p`\n  margin: 1rem 0;\n  font-size: 1rem;\n  font-weight: bold;\n  @media (max-width: 420px) {\n    margin: 0;\n    font-size: 0.8rem;\n  }\n`;\n\nconst SubFont = styled(Font)`\n  margin: 1rem 0 0;\n  text-align: left;\n  @media (max-width: 420px) {\n    margin: 10px 0 0 10px;\n    font-size: 1rem;\n    display: block;\n  }\n`;\n\nconst TextFont = styled.p`\n  margin: 1rem 0 0 0;\n  font-size: 1rem;\n  font-weight: bold;\n`;\n\nconst LoginFont = styled(Font)`\n  padding-top: 10px;\n  @media (max-width: 420px) {\n    padding: 10px;\n    font-size: 1rem;\n  }\n`;\n\nconst EditFont = styled(SubFont)`\n  text-align: center;\n`;\nconst ErrorFont = styled(Font)`\n  color: #ff4646;\n  padding: 0.5rem 0 0 0;\n  margin: 0;\n`;\n\nconst SuccessFont = styled(Font)`\n  background-color: #fff;\n  color: #33bfff;\n  border: 5px solid #33bfff;\n  width: 40%;\n  padding: .3rem;\n`;\n\nconst TimeFont = styled(Font)`\n  font-size: 14px;\n  text-align: right;\n  display: inline-block;\n  font-weight: 300;\n  color: #808080;\n  padding-left: 1rem;\n  @media (max-width: 420px) {\n    margin: 0.5rem 3rem 0 0;\n  }\n`;\n\nconst HomeTimeFont = styled(TimeFont)`\n  @media (max-width: 420px) {\n    margin: 0.5rem 0.5rem 0 0;\n  }\n`;\n\nconst LinkFont = styled.span`\n  font-size: 1rem;\n  font-weight: bold;\n  cursor: pointer;\n  color: #ffd740;\n  text-decoration: underline;\n`;\n\nconst SetUpFont = styled(Font)`\n  margin-right: 1.2rem;\n  display: inline-block;\n`;\n\nconst FooterFont = styled(Font)`\n  text-align: center;\n  margin: 0;\n  font-weight: 300;\n`;\n\nconst PostsFont = styled(Font)`\n  padding: 5px 10px;\n  border-radius: 20px;\n  margin: 1rem 0 0;\n  color: #4fc3f7;\n  font-size: 2rem;\n  @media (max-width: 420px) {\n    font-size: 1.5rem;\n    margin: 0;\n  }\n`;\n\nconst TotalFont = styled(Font)`\n  font-size: 4rem;\n  margin: 0;\n  @media (max-width: 420px) {\n    font-size: 3rem;\n  }\n`;\n\nconst CommentFont = styled.span`\n  font-size: 1rem;\n  display: block;\n  text-align: left;\n  cursor: pointer;\n  color: #0070f3;\n  @media (max-width: 420px) {\n    font-size: 0.8rem;\n  }\n`;\n\nconst CommentUserFont = styled.span`\n  font-weight: 300;\n  font-size: 1rem;\n  @media (max-width: 420px) {\n    font-size: 0.8rem;\n  }\n`;\n\nconst CommentsFont = styled(CommentUserFont)`\n  font-size: 0.8rem;\n  @media (max-width: 420px) {\n    font-size: 11px;\n  }\n`;\n\nexport {\n  Font,\n  SubFont,\n  TextFont,\n  EditFont,\n  LoginFont,\n  ErrorFont,\n  SuccessFont,\n  LinkFont,\n  SetUpFont,\n  HomeTimeFont,\n  TimeFont,\n  FooterFont,\n  PostsFont,\n  TotalFont,\n  CommentFont,\n  CommentUserFont,\n  CommentsFont,\n};\n","import styled from \"styled-components\";\n\nconst Img = styled.img`\n  @media (max-width: 420px) {\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nconst ImageTag = styled.div`\n  margin-top: 0.5rem;\n  height: 200px;\n  @media (max-width: 420px) {\n    height: 100px;\n    width: 80px;\n  }\n`;\n\nconst ImageSp = styled.img`\n  height: 100%;\n  width: 100%;\n  border-radius: 30px;\n`;\n\nexport { Img, ImageTag, ImageSp };\n","import styled from \"styled-components\";\n\nconst Button = styled.button`\n  font-size: 1rem;\n  padding: 10px;\n  margin: 10px 0;\n  border-radius: 20px;\n  outline: none;\n  background-color: #ffd740;\n  font-weight: bold;\n  opacity: 0.8;\n  transition: 0.3s;\n  cursor: pointer;\n  &:hover {\n    opacity: 1;\n  }\n  @media (max-width: 420px) {\n    font-size: 1rem;\n    padding: 0 10px;\n  }\n`;\n\nconst GuestButton = styled(Button)`\n  height: 50px;\n  padding: 10px 15px;\n  margin: 10px 20px 10px 0;\n  background-color: #ff5252;\n  @media (max-width: 420px) {\n    height: 40px;\n    margin: 10px 5px 0 0;\n  }\n`;\n\nconst LoginButton = styled(Button)`\n  font-size: 1.5rem;\n  width: 445px;\n  padding: 15px;\n  margin: 1.5rem 0 0;\n  @media (max-width: 420px) {\n    width: 280px;\n    padding: 10px;\n    margin: 1.5rem 0 1rem;\n  }\n`;\n\nconst SubLoginButton = styled(GuestButton)`\n  background-color: #ffd740;\n`;\n\nconst SearchButton = styled(Button)`\n  padding: 10px 20px 10px;\n  border-radius: 0 20px 20px 0;\n  opacity: 1;\n  @media (max-width: 420px) {\n    padding: 5px 10px;\n  }\n`;\nconst HomeSearchButton = styled(SearchButton)`\n  padding: 2px 10px;\n  border: 1px solid #000;\n  @media (max-width: 420px) {\n    padding: 2px 10px;\n    margin: 0;\n  }\n`;\n\nconst UpdateButton = styled(Button)`\n  font-size: 0.8rem;\n  border-radius: 0px;\n  padding: 5px 30px;\n  margin: 0;\n  border: 1px solid #ffd740;\n`;\n\nconst CommentButton = styled(UpdateButton)`\n  background-color: #0070f3;\n  border: 1px solid #0070f3;\n  color: #fff;\n  @media (max-width: 420px) {\n    font-size: .7rem;\n    padding: 0 1rem;\n  }\n`;\n\nconst CommentsMenuButton = styled.span`\n  cursor: pointer;\n  color: #a9a9a9;\n`;\n\nconst CommentsDeleteButton = styled(UpdateButton)`\n  background-color: #fff;\n  border: 1px solid #fff;\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.6);\n  padding: 5px 10px;\n`;\n\nconst CancelButton = styled.span`\n  padding: 5px 17px;\n  font-size: 0.8rem;\n  outline: none;\n  cursor: pointer;\n  @media (max-width: 420px) {\n    font-size: .7rem;\n    padding: 0 10px;\n  }\n`;\n\nconst IconButton = styled(Button)`\n  font-size: 0.8rem;\n  padding: 15px;\n  border-radius: 50%;\n  border: 1px solid #ffd740;\n  margin: 0;\n  @media (max-width: 420px) {\n    padding: 10px;\n  }\n`;\n\nconst SetUpButton = styled.div`\n  color: #000;\n  font-weight: bold;\n  position: relative;\n  width: 70px;\n  height: 65px;\n  padding-top: 5px;\n  background-color: #ffd740;\n  border-radius: 50%;\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);\n  opacity: 0.8;\n  transition: 0.3s;\n  &:hover {\n    opacity: 1;\n  }\n  &::before {\n    position: absolute;\n    content: \"\";\n    top: 32px;\n    left: 16px;\n    display: inline-block;\n    width: 25px;\n    height: 13px;\n    border-top: 5px solid;\n    transform: rotate(90deg);\n  }\n  &::after {\n    position: absolute;\n    top: 38px;\n    left: 50%;\n    content: \"\";\n    display: inline-block;\n    width: 26px;\n    height: 13px;\n    border-top: 5px solid;\n    transform: translateX(-50%);\n  }\n  &:active {\n    color: #000;\n  }\n  @media (max-width: 420px) {\n    opacity: 0.5;\n    width: 60px;\n    height: 55px;\n    &:hover {\n      opacity: 1;\n    }\n    &::after {\n      top: 36px;\n      width: 23px;\n    }\n    &::before {\n      width: 22px;\n      top: 30px;\n      left: 12px;\n    }\n  }\n`;\n\nconst GoogleButton = styled(LoginButton)`\n  font-size: 1rem;\n  padding: 10px;\n  margin: 0;\n  background-color: #ff3d00;\n  color: #fff;\n  width: 220px;\n  border-radius: 5px;\n  @media (max-width: 420px) {\n    margin: 0.5rem 0 0;\n  }\n`;\n\nconst TwitterButton = styled(GoogleButton)`\n  background-color: #33bfff;\n  margin: 0 0 0 0.5rem;\n  @media (max-width: 420px) {\n    margin: 0.5rem 0 0;\n  }\n`;\n\nconst ProfileSetUpButton = styled(SetUpButton)`\n  @media (max-width: 420px) {\n    opacity: 0.8;\n  }\n`;\n\nconst ResetButton = styled(Button)`\n  padding: 10px 15px;\n`;\n\nexport {\n  Button,\n  GuestButton,\n  LoginButton,\n  SubLoginButton,\n  SearchButton,\n  SetUpButton,\n  ProfileSetUpButton,\n  ResetButton,\n  UpdateButton,\n  CancelButton,\n  IconButton,\n  HomeSearchButton,\n  GoogleButton,\n  TwitterButton,\n  CommentButton,\n  CommentsMenuButton,\n  CommentsDeleteButton,\n};\n","import styled from \"styled-components\";\n\nconst Title = styled.h1`\n  font-size: 3rem;\n  margin 0;\n  font-family:revert;\n  @media(max-width:420px){\n    font-size:2rem;\n    margin: 1.5rem auto 0;\n  }\n`;\n\nconst HeaderTitle = styled(Title)`\n  font-family: Chalkboard SE;\n  @media (max-width: 420px) {\n    margin: 0 auto;\n  }\n`;\n\nconst MainTitle = styled(HeaderTitle)`\n  font-size: 4rem;\n  color: #fff;\n  text-shadow:5px 0 5px black;\n}\n`;\n\nconst LoginTitle = styled(Title)`\n  margin: 2rem 0 1rem;\n`;\n\nexport { HeaderTitle, MainTitle, LoginTitle, Title };\n","import styled from \"styled-components\";\n\nconst TableLogin = styled.div`\n  width: 100%;\n  position: absolute;\n  right: 0;\n`;\n\nconst SubTableLogin = styled.div`\n  text-align: center;\n`;\n\nexport { TableLogin, SubTableLogin };\n","import styled from \"styled-components\";\nimport { TableLogin } from \"./TableLogin\";\n\nconst TableTop = styled(TableLogin)`\n  top: 20%;\n  right: 10%;\n  width: 75vw;\n  display: flex;\n  justify-content: space-between;\n  @media (max-width: 420px) {\n    right: 0;\n    width: 90%;\n  }\n`;\n\nconst SubTableTop = styled.div`\n  text-align: left;\n  @media (max-width: 420px) {\n    text-align: center;\n  }\n`;\n\nconst TableTopImages = styled.div`\n  width: 35vw;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  @media (max-width: 420px) {\n    display: none;\n  }\n`;\nconst TableTopImage = styled.div`\n  width: 200px;\n`;\nconst SubTableTopImage = styled.div`\n  height: 220px;\n  width: 350px;\n`;\n\nexport {\n  TableTop,\n  SubTableTop,\n  TableTopImages,\n  TableTopImage,\n  SubTableTopImage,\n};\n","export default \"__VITE_ASSET__ecab4c61__\"","import styled from \"styled-components\";\nimport img from \"../../img/Book_Img.jpg\";\n\nconst MainPage = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst MainTablePages = styled.div`\n  margin: 0 auto;\n  padding: 2rem;\n  max-width: 1000px;\n  width: 100%;\n  text-align: center;\n  position: relative;\n  @media (max-width: 420px) {\n    width: 100%;\n    padding: 10px 0;\n  }\n`;\n\nconst MainImage = styled(MainPage)`\n  color: #fff;\n  background-image: url(${img});\n  background-size: cover;\n  background-position: center;\n  position: relative;\n  min-height: 83.5vh;\n  &:before {\n    content: \"\";\n    background-color: rgba(0, 0, 0, 0.4);\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n  @media (max-width: 420px) {\n    min-height: 90vh;\n  }\n`;\nexport { MainImage, MainPage, MainTablePages };\n","import React from \"react\";\nimport firebase from \"../config/Firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { updateUserProfile } from \"../stores/userSlice\";\nimport { RouteComponentProps } from \"react-router\";\n\nimport profileImage from \"../img/PR2_Img.png\";\nimport homeImage from \"../img/PR_Img.png\";\nimport { TextFont } from \"@Atoms/font\";\nimport { ImageSp } from \"@Atoms/image\";\nimport { GuestButton, SubLoginButton } from \"@Atoms/button\";\nimport { MainTitle } from \"@Atoms/title\";\nimport {\n  TableTop,\n  SubTableTop,\n  TableTopImages,\n  TableTopImage,\n  SubTableTopImage,\n} from \"@Molecules/TableTop\";\nimport { MainImage } from \"@Organisms/MainPages\";\n\nimport { faUser, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Top: React.FC<RouteComponentProps> = (props) => {\n  const dispatch = useDispatch();\n  const GuestLogin = async () => {\n    await firebase\n      .auth()\n      .signInAnonymously()\n      .then(({ user }) => {\n        user?.updateProfile({\n          displayName: \"ゲストユーザー\",\n        });\n      });\n    dispatch(\n      updateUserProfile({\n        displayName: \"ゲストユーザー\",\n      })\n    );\n    props.history.push(\"/home\");\n  };\n\n  const handleLogin = () => {\n    props.history.push(\"/login\");\n  };\n\n  return (\n    <>\n      <MainImage>\n        <TableTop>\n          <SubTableTop>\n            <TextFont>読書アウトプットアプリ</TextFont>\n            <MainTitle>Read Out</MainTitle>\n            <p>読書しても読んだ内容、忘れてはいませんか？</p>\n            <p>読んだ本をアウトプットすることで記憶の定着化に繋げよう！</p>\n            <SubLoginButton onClick={handleLogin}>\n              <FontAwesomeIcon icon={faSignOutAlt} />\n              login\n            </SubLoginButton>\n            <GuestButton\n              onClick={async () => {\n                  await GuestLogin();\n              }}\n            >\n              <FontAwesomeIcon icon={faUser} />\n              Guest\n            </GuestButton>\n          </SubTableTop>\n          <TableTopImages>\n            <SubTableTopImage>\n              <ImageSp src={`${homeImage}`} />\n            </SubTableTopImage>\n            <TableTopImage>\n              <ImageSp src={`${profileImage}`} />\n            </TableTopImage>\n          </TableTopImages>\n        </TableTop>\n      </MainImage>\n    </>\n  );\n};\n\nexport default Top;\n","import styled from \"styled-components\";\n\nconst Input = styled.input`\n  font-size: 1rem;\n  outline: none;\n  width: 300px;\n  @media (max-width: 420px) {\n    font-size: 1rem;\n    width: 200px;\n  }\n`;\n\nconst LoginInput = styled(Input)`\n  border-radius: 20px;\n  padding: 15px;\n  background-color: rgba(255, 255, 255, 0.8);\n  width: 400px;\n  position: relative;\n  @media (max-width: 420px) {\n    width: 250px;\n    padding: 10px;\n  }\n`;\n\nconst SearchInput = styled(Input)`\n  border-radius: 20px 0 0 20px;\n  padding: 10px 20px;\n  width: 500px;\n  margin: 20px 0 10px;\n  @media (max-width: 420px) {\n    width: 250px;\n    padding: 5px 10px;\n  }\n`;\n\nconst SetUpInput = styled(Input)`\n  text-align: center;\n  font-size: 1rem;\n`;\n\nconst EditInput = styled(Input)`\n  text-align: center;\n  @media (max-width: 420px) {\n    font-size: 0.8rem;\n    width: 100%;\n  }\n`;\n\nconst TextArea = styled.textarea`\n  font-size: 1rem;\n  height: 100px;\n  width: 100%;\n  @media (max-width: 420px) {\n    font-size: 0.9rem;\n    height: 70px;\n  }\n`;\n\nconst CommentInput = styled(Input)`\n  border-bottom: 1px solid #a9a9a9;\n  border-top: none;\n  border-right: none;\n  border-left: none;\n  box-sizing: border-box;\n  padding: 10px 10px 5px 10px;\n  width: 100%;\n  margin-bottom: 10px;\n  &:focus {\n    border-bottom: 1px solid #0070f3;\n    transition: all 0.8s;\n  }\n  @media (max-width: 420px) {\n    font-size: 0.8rem;\n  }\n`;\n\nexport {\n  Input,\n  SetUpInput,\n  LoginInput,\n  SearchInput,\n  EditInput,\n  TextArea,\n  CommentInput,\n};\n","import styled from \"styled-components\";\n\nconst TableSetUp = styled.div`\n  padding: 20px 70px;\n  margin: 20px;\n  background-color: #fff;\n  border-radius: 20px;\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);\n  @media (max-width: 420px) {\n    padding: 20px 10px;\n    margin: 1rem 0 0 0;\n  }\n`;\n\nconst TableSetUpProfile = styled.div`\n  position: fixed;\n  bottom: 20%;\n  right: 25%;\n  @media (max-width: 420px) {\n    bottom: 35%;\n    right: 5%;\n  }\n`;\n\nconst TableSetUpHome = styled(TableSetUpProfile)`\n  bottom: 10%;\n  right: 15%;\n  @media (max-width: 420px) {\n    top: 15%;\n  }\n`;\n\nexport { TableSetUp, TableSetUpProfile, TableSetUpHome };\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../stores/userSlice\";\nimport firebase from \"../config/Firebase\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport axios from \"axios\";\nimport shortid from \"shortid\";\n\nimport { Title } from \"@Atoms/title\";\nimport { Button } from \"@Atoms/button\";\nimport { SetUpFont } from \"@Atoms/font\";\nimport { SetUpInput, TextArea } from \"@Atoms/input\";\nimport { TableSetUp } from \"@Molecules/TableSetUp\";\nimport { MainPage, MainTablePages } from \"@Organisms/MainPages\";\n\nconst SetUp: React.FC<RouteComponentProps> = (props) => {\n  const initialState:string = shortid.generate();\n\n  const [title, setTitle] = useState<string>(\"\");\n  const [text, setText] = useState<string>(\"\");\n  const [page, setPage] = useState<string>(\"\");\n  const [dates, setDates] = useState(0);\n  const [textId, setTextId] = useState<string>(initialState);\n\n  const user = useSelector(selectUser);\n\n  const FS = firebase.firestore().collection(\"text\");\n  useEffect(() => {\n    let date = new Date();\n    let dateMonth = date.getMonth() + 1;\n    function getDate(dt: number) {\n      return dt <= 1\n        ? 30\n        : dt <= 2\n        ? 60\n        : dt <= 3\n        ? 87\n        : dt <= 4\n        ? 117\n        : dt <= 5\n        ? 146\n        : dt <= 6\n        ? 177\n        : dt <= 7\n        ? 206\n        : dt <= 8\n        ? 236\n        : dt <= 9\n        ? 266\n        : dt <= 10\n        ? 295\n        : dt <= 11\n        ? 325\n        : 354;\n    }\n    const updateDay =\n      date.getFullYear() + date.getMonth() + date.getDate() + getDate(dateMonth);\n    setDates(updateDay);\n  }, []);\n\n  const handleComment = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const url = \"https://www.googleapis.com/books/v1/volumes\";\n    const params = {\n      q: title,\n      maxResults: 1,\n    };\n    const response = await axios.get(url, { params: params });\n    try {\n      const item = response.data.items[0].id;\n      const imageUrl = `https://books.google.com/books/content?id=${item}&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api`;\n      \n      FS.doc(`${textId}`).set({\n        user: user.displayName,\n        title: title,\n        text: text,\n        page: page,\n        date: dates,\n        uid: user.uid,\n        id: textId,\n        editing: false,\n        createAt: new Date().getTime(),\n        image: imageUrl,\n      });\n      \n      setText(\"\");\n      setTitle(\"\");\n      setPage(\"\");\n      setTextId(textId);\n      props.history.push(\"/home\");\n    } catch (err: any) {\n      alert(err.message);\n    }\n  };\n  return (\n    <>\n      <MainPage>\n        <MainTablePages>\n          <Title>Set Up</Title>\n          <TableSetUp>\n            <form onSubmit={handleComment}>\n              <div>\n                <p>読んだ本は？</p>\n                <SetUpInput\n                  id=\"title\"\n                  type=\"text\"\n                  placeholder=\"タイトル名\"\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                />\n                <p>何ページ読んだか？</p>\n                <label>\n                  <SetUpInput\n                    id=\"page\"\n                    type=\"text\"\n                    placeholder=\"読んだページ数\"\n                    value={page}\n                    onChange={(e) => setPage(e.target.value)}\n                  />\n                </label>\n                <p>感想</p>\n                <TextArea\n                  id=\"text\"\n                  placeholder=\"コメント入力\"\n                  value={text}\n                  onChange={(e) => setText(e.target.value)}\n                />\n              </div>\n              <SetUpFont>\n                <Link\n                  to=\"/profile\"\n                  style={{ color: \"#36622b\" }}\n                >\n                  キャンセル\n                </Link>\n              </SetUpFont>\n              <Button disabled={!text || !page || !title}>投稿</Button>\n            </form>\n          </TableSetUp>\n        </MainTablePages>\n      </MainPage>\n    </>\n  );\n};\n\nexport default SetUp;\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport firebase from \"../config/Firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { updateUserProfile } from \"../stores/userSlice\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport { required } from \"@Modules\"\nimport { TextFont, LoginFont, LinkFont, ErrorFont } from \"@Atoms/font\";\nimport { LoginTitle } from \"@Atoms/title\";\nimport { LoginButton, GoogleButton, TwitterButton } from \"@Atoms/button\";\nimport { LoginInput } from \"@Atoms/input\";\nimport { TableLogin, SubTableLogin } from \"@Molecules/TableLogin\";\nimport { MainImage } from \"@Organisms/MainPages\";\n\nconst Login: React.FC<RouteComponentProps> = (props) => {\n  const [password, setPassword] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [name, setName] = useState<string>(\"\");\n  const [inLogin, setInLogin] = useState<boolean>(true);\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n  const { register, handleSubmit, errors } = useForm<required>();\n  const dispatch = useDispatch();\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n  const twitterProvider = new firebase.auth.TwitterAuthProvider();\n\n  const handleSignIn = async () => {\n    try {\n      await firebase.auth().signInWithEmailAndPassword(email, password);\n      props.history.push(\"/home\");\n    } catch (err) {\n      setErrorMessage(\"※ログインに失敗しました。メールアドレスとパスワードを確認してログインしていください。\");\n    }\n  };\n\n  const handleCreateUser = async () => {\n    try {\n      await firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(({ user }) => {\n          user?.updateProfile({\n            displayName: name,\n          });\n        });\n      dispatch(\n        updateUserProfile({\n          displayName: name,\n        })\n      );\n      props.history.push(\"/home\");\n    } catch (err) {\n      setErrorMessage(\"※新規作成に失敗しました。ネットワーク環境をご確認ください。\");\n      return;\n    }\n  };\n\n  const signInGoogle = async () => {\n    await firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(() => {\n        props.history.push(\"/home\");\n      })\n      .catch((err) => alert(err.message));\n  };\n\n  const signInTwitter = async () => {\n    await firebase\n      .auth()\n      .signInWithPopup(twitterProvider)\n      .then(() => {\n        props.history.push(\"/home\");\n      })\n      .catch((err) => alert(err.message));\n  };\n\n  return (\n    <>\n      <MainImage>\n        <TableLogin>\n          <SubTableLogin>\n            <LoginTitle>{inLogin ? \"Login\" : \"Sign In\"}</LoginTitle>\n            <form\n              onSubmit={\n                inLogin ?\n                  handleSubmit(handleSignIn) : handleSubmit(handleCreateUser)\n              }\n            >\n              <div style={{ display: inLogin ? \"none\" : \"block\" }}>\n                <LoginFont>UserName</LoginFont>\n                <LoginInput\n                  name=\"name\"\n                  placeholder=\"name\"\n                  value={name}\n                  type=\"name\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setName(e.target.value);\n                  }}\n                />\n              </div>\n              <LoginFont>E-mail</LoginFont>\n              <LoginInput\n                name=\"email\"\n                placeholder=\"example@gmail.com\"\n                value={email}\n                type=\"email\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setEmail(e.target.value);\n                }}\n                ref={register({ required: true, minLength: 9 })}\n                />\n              {errors.email && <ErrorFont>※メールは必須です。</ErrorFont>}\n              <LoginFont>Password</LoginFont>\n              <LoginInput\n                name=\"password\"\n                placeholder=\"８文字以上の入力\"\n                value={password}\n                type=\"password\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setPassword(e.target.value);\n                }}\n                ref={register({ required: true, minLength: 8 })}\n                />\n              {errors.password && <ErrorFont>※パスワードは必須です。</ErrorFont>}\n              <br />\n              <LoginButton>\n                {inLogin ? \"Login\" : \"Sign Up\"}\n              </LoginButton>\n            </form>\n            <ErrorFont>{errorMessage}</ErrorFont>\n            <br />\n            <GoogleButton onClick={signInGoogle}>\n              Sign In with Google\n            </GoogleButton>\n            <TwitterButton onClick={signInTwitter}>\n              Sign In with Twitter\n            </TwitterButton>\n            <TextFont>\n              パスワードを忘れてしまった場合は\n              <Link to=\"/reset\" style={{ color: \"#ffd740\", textDecoration: \"underline\" }}>\n                こちら\n              </Link>\n              へ\n            </TextFont>\n            <TextFont>\n              <LinkFont\n                onClick={() => {\n                  setInLogin(!inLogin);\n                }}\n              >\n                {inLogin ? \"Sign In\" : \"Login\"}\n              </LinkFont>\n              へ\n            </TextFont>\n          </SubTableLogin>\n        </TableLogin>\n      </MainImage>\n    </>\n  );\n};\n\nexport default Login;\n","import styled from \"styled-components\";\n\nconst TableHome = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n  margin: 20px;\n  background-color: #fff;\n  border-radius: 20px;\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);\n  @media (max-width: 420px) {\n    padding: 10px;\n    margin: 5px;\n  }\n`;\n\nconst TableForm = styled.form`\n  @media (max-width: 420px) {\n    margin: 0.5rem 0;\n  }\n`;\n\nconst TableFormComment = styled.form`\n  width: 100%;\n  text-align: right;\n`;\n\nconst TableCommentsText = styled.div`\n  text-align: left;\n  padding-left: 2rem;\n  @media (max-width: 420px) {\n    padding: 0 1rem 0 0;\n  }\n`;\n\nconst TableCommentsMenu = styled.div`\n  position: relative;\n  margin-left: 1rem;\n  display: inline-block;\n`;\n\nconst TableCommentsDelete = styled.div`\n  position: absolute;\n  top: 0;\n  left: 10px;\n  width: 50px;\n`;\n\nconst TableList = styled.div`\n  @media (max-width: 420px) {\n    overflow-y: scroll;\n    min-height: 440px;\n    max-height: 65vh;\n    margin-bottom: 3.5rem;\n  }\n`;\n\nconst TableTexts = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n`;\n\nconst TableItem = styled.div`\n  width: 45vw;\n  text-align: left;\n  margin-left: 2rem;\n  @media (max-width: 420px) {\n    width: 65vw;\n    margin-left: 1rem;\n  }\n`;\nexport {\n  TableList,\n  TableHome,\n  TableForm,\n  TableTexts,\n  TableItem,\n  TableFormComment,\n  TableCommentsText,\n  TableCommentsMenu,\n  TableCommentsDelete,\n};\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"../config/Firebase\";\nimport moment from \"moment\";\nimport shortid from \"shortid\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../stores/userSlice\";\n\nimport { comments } from \"@Modules\";\nimport {\n  CommentFont,\n  HomeTimeFont,\n  CommentUserFont,\n  CommentsFont,\n} from \"@Atoms/font\";\nimport {\n  CancelButton,\n  CommentButton,\n  CommentsMenuButton,\n  CommentsDeleteButton,\n} from \"@Atoms/button\";\nimport { CommentInput } from \"@Atoms/input\";\nimport {\n  TableFormComment,\n  TableCommentsText,\n  TableCommentsMenu,\n  TableCommentsDelete,\n} from \"@Molecules/TableHome\";\n\nimport { commentProps } from \"@Modules\"\n\nimport { faEllipsisV } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Comments: React.FC<commentProps> = (props) => {\n  const initialState = shortid.generate();\n\n  const [comment, setComment] = useState<string>(\"\");\n  const [comments, setComments] = useState<comments[]>([]);\n  const [openComments, setOpenComments] = useState<boolean>(false);\n  const [count, setCount] = useState<number>(0);\n  const [openMenu, setOpenMenu] = useState<boolean>(false);\n  const [textId, setTextId] = useState<string>(initialState);\n\n  const user = useSelector(selectUser);\n\n  const FS = firebase\n    .firestore()\n    .collection(\"text\")\n    .doc(`${props.list.id}`)\n    .collection(\"comments\");\n\n  useEffect(() => {\n    const unSub = FS.orderBy(\"createAt\", \"asc\").onSnapshot((snapshot) => {\n      const posts: any = snapshot.docs.map((doc) => {\n        return doc.data();\n      });\n      setComments(posts);\n    });\n    FS.get().then((doc) => {\n      setCount(doc.size);\n    });\n    return () => {\n      unSub();\n    };\n  }, []);\n\n  const newComment = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    FS.doc(`${textId}`).set({\n      user: user.displayName,\n      uid: user.uid,\n      text: comment,\n      createAt: new Date().getTime(),\n      id: textId,\n    });\n    setComment(\"\");\n    setCount(count + 1);\n    setTextId(textId);\n  };\n\n  return (\n    <>\n      <div>\n        <CommentFont onClick={() => setOpenComments(!openComments)}>\n          コメント（{count}）<span>{openComments ? \"非表示\" : \"表示\"}</span>\n        </CommentFont>\n      </div>\n      <TableFormComment onSubmit={newComment}>\n        <CommentInput\n          type=\"text\"\n          placeholder=\"コメントの追加...\"\n          value={comment}\n          onChange={(e) => setComment(e.target.value)}\n        />\n        <CancelButton onClick={() => setComment(\"\")}>キャンセル</CancelButton>\n        <CommentButton disabled={!comment}>送信</CommentButton>\n      </TableFormComment>\n      {openComments && (\n        <div>\n          {comments.map((list, id) => (\n            <TableCommentsText key={id}>\n              <div>\n                <CommentUserFont>@{list.user}</CommentUserFont>\n                <HomeTimeFont>{moment(list.createAt).fromNow()}</HomeTimeFont>\n                <TableCommentsMenu>\n                  {list.uid === user.uid && (\n                    <CommentsMenuButton\n                      onClick={() => setOpenMenu(!openMenu)}\n                    >\n                      <FontAwesomeIcon icon={faEllipsisV} />\n                    </CommentsMenuButton>\n                  )}\n                  {list.uid === user.uid && (\n                    <>\n                      {openMenu && (\n                        <TableCommentsDelete>\n                          <CommentsDeleteButton\n                            onClick={() =>\n                              FS.doc(`${list.id}`)\n                                .delete()\n                                .then(() => setCount(count - 1))\n                                .then(() => setOpenMenu(!openMenu))\n                            }\n                          >\n                            削除\n                          </CommentsDeleteButton>\n                        </TableCommentsDelete>\n                      )}\n                    </>\n                  )}\n                </TableCommentsMenu>\n              </div>\n              <CommentsFont>{list.text}</CommentsFont>\n            </TableCommentsText>\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Comments;\n","import styled from \"styled-components\";\nimport { TableHome } from \"./TableHome\";\n\nconst TableProfile = styled(TableHome)`\n  padding: 20px 40px;\n  position: relative;\n  @media (max-width: 420px) {\n    padding: 15px 10px;\n  }\n`;\n\nconst TableButton = styled.div`\n  text-align: right;\n  @media (max-width: 420px) {\n    text-align: left;\n  }\n`;\n\nconst TableIcon = styled.div`\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  @media (max-width: 420px) {\n    top: unset;\n    right: 15px;\n    bottom: 5px;\n  }\n`;\n\nconst TableDelete = styled.div`\n  position: absolute;\n  bottom: 18px;\n  right: 20px;\n  @media (max-width: 420px) {\n    bottom: 5px;\n  }\n`;\n\nconst TableText = styled.div`\n  text-align: left;\n  margin: 0 20px;\n`;\n\nconst TableEdit = styled.div`\n  margin: 0 auto;\n  width: 90%;\n`;\n\nconst TableChart = styled.div`\n  width: 50vw;\n  @media (max-width: 420px) {\n    width: 70vw;\n  }\n`;\n\nconst TableTotal = styled.div`\n  margin: auto 0 auto 2rem;\n  border: 1px solid #000;\n  padding: 10px 30px;\n  border-radius: 50%;\n  @media (max-width: 420px) {\n    width: 90px;\n    padding: 10px;\n    margin: 0 0 0 15rem;\n  }\n`;\n\nconst TablePosts = styled.div`\n  display: flex;\n  width: 80%;\n  @media (max-width: 420px) {\n    flex-direction: column-reverse;\n    width: 100%;\n  }\n`;\n\nexport {\n  TableText,\n  TableProfile,\n  TableIcon,\n  TableButton,\n  TableDelete,\n  TableEdit,\n  TableChart,\n  TableTotal,\n  TablePosts,\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../config/Firebase\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../stores/userSlice\";\nimport moment from \"moment\";\nimport { Text } from \"@Modules\";\n\nimport Comments from \"@Components/Comments\";\n\nimport { Title } from \"@Atoms/title\";\nimport { HomeTimeFont, SubFont, Font } from \"@Atoms/font\";\nimport { Img, ImageTag } from \"@Atoms/image\";\nimport {\n  SetUpButton,\n  HomeSearchButton,\n  UpdateButton,\n} from \"@Atoms/button\";\nimport { Input } from \"@Atoms/input\";\nimport { TableSetUpHome } from \"@Molecules/TableSetUp\";\nimport { TableText } from \"@Molecules/TableProfile\";\nimport {\n  TableHome,\n  TableForm,\n  TableList,\n  TableItem,\n  TableTexts,\n} from \"@Molecules/TableHome\";\nimport { MainPage, MainTablePages } from \"@Organisms/MainPages\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Room: React.FC = () => {\n  const [postText, setPostText] = useState<Text[]>([]);\n  const [value, setValue] = useState<string>(\"\");\n  const [isDone, setIsDone] = useState<boolean>(false);\n  const [toggleMessage, setToggleMessage] = useState<string>(\"\");\n\n  const FS = firebase.firestore().collection(\"text\");\n\n  const user = useSelector(selectUser);\n  useEffect(() => {\n    setToggleMessage(\"...loading\");\n    let isMounted = true;\n    FS.orderBy(\"createAt\", \"desc\").onSnapshot((snapshot) => {\n      const posts: any = snapshot.docs.map((doc) => {\n        return doc.data();\n      });\n      if (isMounted) {\n        setPostText(posts);\n        setToggleMessage(\"\");\n      }\n    });\n    return (): void => {\n      isMounted = false;\n    };\n  }, []);\n\n  const handleFilter = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (value === \"\") return;\n    setPostText(\n      postText.filter((list) => list.title === value || list.user === value)\n    );\n    setIsDone(!isDone);\n    setValue(\"\");\n  };\n\n  const handleRender = (e: React.FormEvent) => {\n    e.preventDefault();\n    FS.orderBy(\"createAt\", \"desc\").onSnapshot((snapshot) => {\n      const posts: any = snapshot.docs.map((doc) => {\n        return doc.data();\n      });\n      setPostText(posts);\n      setIsDone(!isDone);\n    });\n  };\n\n  return (\n    <>\n      <MainPage>\n        <MainTablePages>\n          <Title>Home</Title>\n          <TableText>\n            {isDone ? (\n              <UpdateButton onClick={handleRender}>再表示</UpdateButton>\n            ) : (\n              <TableForm onSubmit={handleFilter}>\n                <SubFont>検索</SubFont>\n                <Input\n                  type=\"text\"\n                  placeholder=\"タイトル or ユーザー名\"\n                  value={value}\n                  onChange={(e) => setValue(e.target.value)}\n                />\n                <HomeSearchButton>\n                  <FontAwesomeIcon icon={faSearch} />\n                </HomeSearchButton>\n              </TableForm>\n            )}\n          </TableText>\n          <TableList>\n            <Font>{toggleMessage}</Font>\n            {postText.map((list, id) => (\n              <TableHome key={id}>\n                <ImageTag>\n                  <Img src={list.image} />\n                </ImageTag>\n                <TableTexts>\n                  <TableItem>\n                    <Font>ユーザー：{list.user}</Font>\n                    <Font>タイトル：{list.title}</Font>\n                    <Font>読んだページ数：{list.page}</Font>\n                    <Font>感想：{list.text}</Font>\n                  </TableItem>\n                  <HomeTimeFont>\n                    {moment(list.createAt).format(\"A HH:mm YYYY/MM/DD\")}\n                  </HomeTimeFont>\n                  <Comments list={list} />\n                </TableTexts>\n              </TableHome>\n            ))}\n          </TableList>\n          {user.uid && (\n            <TableSetUpHome>\n              <Link to=\"/setup\" >\n                <SetUpButton>投稿</SetUpButton>\n              </Link>\n            </TableSetUpHome>\n          )}\n        </MainTablePages>\n      </MainPage>\n    </>\n  );\n};\n\nexport default Room;\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"../config/Firebase\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../stores/userSlice\";\nimport { Line } from \"react-chartjs-2\";\n\nconst Chart: React.FC = () => {\n  const [date, setDate] = useState(null);\n  const [totalDays, setTotalDays] = useState<string>(\"\");\n  const [count1, setCount1] = useState<number>(0);\n  const [count2, setCount2] = useState<number>(0);\n  const [count3, setCount3] = useState<number>(0);\n  const [count4, setCount4] = useState<number>(0);\n  const [count5, setCount5] = useState<number>(0);\n  const [count6, setCount6] = useState<number>(0);\n  const [count7, setCount7] = useState<number>(0);\n  const [count8, setCount8] = useState<number>(0);\n  const [count9, setCount9] = useState<number>(0);\n  const [count10, setCount10] = useState<number>(0);\n\n  const user = useSelector(selectUser);\n  const FS = firebase.firestore().collection(\"text\");\n\n  useEffect(() => {\n    if (user) {\n      let date = new Date();\n      let dateMonth = date.getMonth() + 1;\n      const getDate = (dt: number) => {\n        return dt <= 1\n          ? 30\n          : dt <= 2\n          ? 60\n          : dt <= 3\n          ? 87\n          : dt <= 4\n          ? 117\n          : dt <= 5\n          ? 146\n          : dt <= 6\n          ? 177\n          : dt <= 7\n          ? 206\n          : dt <= 8\n          ? 236\n          : dt <= 9\n          ? 266\n          : dt <= 10\n          ? 295\n          : dt <= 11\n          ? 325\n          : 354;\n      };\n      const days =\n        date.getFullYear() +\n        date.getMonth() +\n        date.getDate() +\n        getDate(dateMonth);\n\n      FS.where(\"user\", \"==\", `${user.displayName}`)\n        .where(\"date\", \"<=\", days - 9)\n        .get()\n        .then((doc) => {\n          setCount1(doc.size);\n        });\n      FS.where(\"user\", \"==\", `${user.displayName}`)\n        .where(\"date\", \"<=\", days - 8)\n        .get()\n        .then((doc) => {\n          setCount2(doc.size);\n        });\n      FS.where(\"user\", \"==\", `${user.displayName}`)\n        .where(\"date\", \"<=\", days - 7)\n        .get()\n        .then((doc) => {\n          setCount3(doc.size);\n        });\n      FS.where(\"user\", \"==\", `${user.displayName}`)\n        .where(\"date\", \"<=\", days - 6)\n        .get()\n        .then((doc) => {\n          setCount4(doc.size);\n        });\n      FS.where(\"user\", \"==\", `${user.displayName}`)\n        .where(\"date\", \"<=\", days - 5)\n        .get()\n        .then((doc) => {\n          setCount5(doc.size);\n        });\n      FS.where(\"user\", \"==\", `${user.displayName}`)\n        .where(\"date\", \"<=\", days - 4)\n        .get()\n        .then((doc) => {\n          setCount6(doc.size);\n        });\n      FS.where(\"user\", \"==\", `${user.displayName}`)\n        .where(\"date\", \"<=\", days - 3)\n        .get()\n        .then((doc) => {\n          setCount7(doc.size);\n        });\n      FS.where(\"user\", \"==\", `${user.displayName}`)\n        .where(\"date\", \"<=\", days - 2)\n        .get()\n        .then((doc) => {\n          setCount8(doc.size);\n        });\n      FS.where(\"user\", \"==\", `${user.displayName}`)\n        .where(\"date\", \"<=\", days - 1)\n        .get()\n        .then((doc) => {\n          setCount9(doc.size);\n        });\n      FS.where(\"user\", \"==\", `${user.displayName}`)\n        .get()\n        .then((doc) => {\n          setCount10(doc.size);\n        });\n    }\n\n    // 10日分の日付作成(x軸)\n    let day = new Date();\n    let dateDays: any = [[new Date().getDate() + \"日\"]];\n    for (let i = 0; i < 9; i++) {\n      day.setDate(day.getDate() - 1);\n      let days = [day.getDate() + \"日\"];\n      dateDays.unshift(days);\n    }\n    setDate(dateDays);\n\n    // 10日分の日付（9日前〜翌日）\n    let days = new Date();\n    let previous = new Date();\n    previous.setDate(days.getDate() - 9);\n    let lastMonth = previous.getMonth() + 1;\n    let lastWeek = previous.getDate();\n\n    const longDay = `${lastMonth}月${lastWeek}日 〜 ${\n      days.getMonth() + 1\n    }月${days.getDate()}日 `;\n    setTotalDays(longDay);\n  }, [user]);\n\n  const daysPlus:number[] = [\n    count1,\n    count2,\n    count3,\n    count4,\n    count5,\n    count6,\n    count7,\n    count8,\n    count9,\n    count10,\n  ];\n\n  const graphData = {\n    labels:\n      // 軸ラベル\n      // 各ラベルを配列にすることで軸ラベルが改行されて表示される\n      date,\n    datasets: [\n      // 表示するデータセット\n      {\n        borderColor: \"#4fc3f7\",\n        lineTension: 0,\n        data: daysPlus,\n        label: \"読書アウトプット量\",\n      },\n    ],\n  };\n  const graphOption = {\n    scales: {\n      xAxes: [\n        // x軸設定\n        {\n          scaleLabel: {\n            // 軸ラベル設定\n            display: true,\n            labelString: totalDays,\n          },\n        },\n      ],\n      yAxes: [\n        {\n          ticks: {\n            stepSize: 1,\n          },\n        },\n      ],\n    },\n    option: {\n      responsive: true,\n    },\n  };\n  return (\n    <>\n      <Line data={graphData} options={graphOption} />\n    </>\n  );\n};\n\nexport default Chart;\n","import React, { useEffect, useState } from \"react\";\nimport firebase from \"../config/Firebase\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../stores/userSlice\";\n\nimport { PostsFont, TotalFont } from \"@Atoms/font\";\n\nconst TotalDays = () => {\n  const [count, setCount] = useState<number>(0);\n  const user = useSelector(selectUser);\n  const FS = firebase.firestore().collection(\"text\");\n\n  useEffect(() => {\n    if (user) {\n      FS.where(\"user\", \"==\", `${user.displayName}`)\n        .get()\n        .then((doc) => {\n          setCount(doc.size);\n        });\n    } // ユーザー毎のユーザー投稿合計数\n  }, [user]);\n  return (\n    <>\n      <PostsFont>Total</PostsFont>\n      <TotalFont>{count}</TotalFont>\n    </>\n  );\n};\n\nexport default TotalDays;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../stores/userSlice\";\nimport { Link } from \"react-router-dom\";\nimport Chart from \"@Components/Chart\";\nimport TotalPosts from \"@Components/Count\";\n\nimport { SubFont } from \"@Atoms/font\";\nimport { Title } from \"@Atoms/title\";\nimport { ProfileSetUpButton } from \"@Atoms/button\";\nimport { TableSetUpProfile } from \"@Molecules/TableSetUp\";\n\nimport { TableTotal, TablePosts } from \"@Molecules/TableProfile\";\nimport { MainPage, MainTablePages } from \"@Organisms/MainPages\";\n\nconst Profile: React.FC = () => {\n  const user = useSelector(selectUser);\n\n  return (\n    <>\n      <MainPage>\n        <MainTablePages>\n          <Title>Profile</Title>\n          <SubFont>ユーザー名：{user?.displayName}</SubFont>\n          <TablePosts>\n            <Chart />\n            <TableTotal>\n              <TotalPosts />\n            </TableTotal>\n          </TablePosts>\n          <SubFont>\n            ・\n            <Link to=\"/history\" style={{ textDecoration: \"underline\" }}>\n              投稿履歴\n            </Link>\n            へ\n          </SubFont>\n          {user.uid && (\n            <TableSetUpProfile>\n              <Link to=\"/setup\" >\n                <ProfileSetUpButton>投稿</ProfileSetUpButton>\n              </Link>\n            </TableSetUpProfile>\n          )}\n        </MainTablePages>\n      </MainPage>\n    </>\n  );\n};\n\nexport default Profile;\n","import styled from \"styled-components\";\n\nconst TableSearch = styled.div`\n  text-align: center;\n`;\nconst ListSearch = styled.div`\n  @media (max-width: 420px) {\n    overflow-y: scroll;\n    height: 66vh;\n  }\n`;\n\nconst ItemSearch = styled.div`\n  display: flex;\n  padding: 20px 40px;\n  margin: 20px;\n  background-color: #fff;\n  border-radius: 20px;\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);\n  @media (max-width: 420px) {\n    padding: 10px;\n    margin: 5px;\n  }\n`;\n\nconst TextSearch = styled.div`\n  text-align: left;\n  margin-left: 3rem;\n  @media (max-width: 420px) {\n    margin: 0.5rem 0 0 1rem;\n  }\n`;\n\nexport { TableSearch, ItemSearch, TextSearch, ListSearch };\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport { Font } from \"@Atoms/font\";\nimport { Img, ImageTag } from \"@Atoms/image\";\nimport { Title } from \"@Atoms/title\";\nimport { SearchInput } from \"@Atoms/input\";\nimport { SearchButton } from \"@Atoms/button\";\nimport {\n  TableSearch,\n  ItemSearch,\n  TextSearch,\n  ListSearch,\n} from \"@Molecules/TableSearch\";\nimport { MainPage, MainTablePages } from \"@Organisms/MainPages\";\n\nimport { bookList } from \"@Modules\"\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst BooksSearch: React.FC = () => {\n  const [searchString, setSearchString] = useState<string>(\"\");\n  const [searchResult, setSearchResult] = useState<any>(null);\n  const [toggleMessage, setToggleMessage] = useState<string>(\"\");\n\n  //Google Books API通信\n  const searchGoogleBooks = async (searchString: string) => {\n    setToggleMessage(\"...loading\")\n    const url = \"https://www.googleapis.com/books/v1/volumes\";\n\n    const params = { q: searchString, maxResults: 20 };\n    // 例外が発生することを考慮（try〜catch構文）\n    try {\n      const response = await axios.get(url, { params });\n      setToggleMessage(\"\");\n      return { isSuccess: true, data: response.data, error: null };\n    } catch (error) {\n      setToggleMessage(\"\");\n      return { isSuccess: false, date: null, error };\n    }\n  };\n\n  const handleSearchSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const result = await searchGoogleBooks(searchString);\n    if (result.isSuccess) {\n      setSearchResult(result.data);\n    } else {\n      window.alert(String(result.error));\n    }\n  };\n  return (\n    <>\n      <MainPage>\n        <MainTablePages>\n          <TableSearch>\n            <Title>Books Search</Title>\n            <span>※さまざまな書籍を検索できます。</span>\n            <form onSubmit={handleSearchSubmit}>\n              <SearchInput\n                type=\"text\"\n                placeholder=\"キーワードを入力してください\"\n                onChange={(e) => setSearchString(e.target.value)}\n                required\n              />\n              <SearchButton>\n                <FontAwesomeIcon icon={faSearch} />\n              </SearchButton>\n            </form>\n          </TableSearch>\n          <Font>{toggleMessage}</Font>\n          {searchResult && (\n            <ListSearch>\n              <>\n                {searchResult.items.map((item: bookList) => {\n                  return (\n                    <ItemSearch key={item.id}>\n                      <ImageTag>\n                        <Img\n                          src={`https://books.google.com/books/content?id=${item.id}&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api`}\n                          alt=\"\"\n                        />\n                      </ImageTag>\n                      <TextSearch>\n                        <Font>タイトル名：{item.volumeInfo.title}</Font>\n                        <Font>著者名：{item.volumeInfo.authors}</Font>\n                        <Font>発行日：{item.volumeInfo.publishedDate}</Font>\n                      </TextSearch>\n                    </ItemSearch>\n                  );\n                })}\n              </>\n            </ListSearch>\n          )}\n        </MainTablePages>\n      </MainPage>\n    </>\n  );\n};\n\nexport default BooksSearch;\n","import styled from \"styled-components\";\n\nconst TableReset = styled.div`\n  width: 100%;\n  position: absolute;\n  top: 10%;\n  right: 0;\n  `;\n  \nconst SubTableReset = styled.div`\n  max-width: 570px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 1rem;\n  box-sizing: border-box;\n`;\n\nexport { TableReset, SubTableReset };\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"firebase\";\n\nimport { ResetButton } from \"@Atoms/button\";\nimport { LoginFont, TextFont, ErrorFont, SuccessFont } from \"@Atoms/font\";\nimport { LoginInput } from \"@Atoms/input\";\nimport { TableReset, SubTableReset } from \"@Molecules/TableReset\";\nimport { MainImage } from \"@Organisms/MainPages\";\n\nconst ResetPassword: React.FC = () => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [sendMessage, setSendMessage] = useState<string>(\"\");\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n  const handleResetPassword = (e: React.FormEvent) => {\n    e.preventDefault();\n    setSendMessage(\"\");\n    setErrorMessage(\"\");\n    firebase\n      .auth()\n      .sendPasswordResetEmail(email)\n      .then(() => {\n        setSendMessage(\"メールが送信されました！\");\n        setEmail(\"\");\n      })\n      .catch(() => {\n        setErrorMessage(\"※送信に失敗ました。メールアドレスをご確認し、再度入力してください。\")\n        setEmail(\"\");\n      })\n  };\n  return (\n    <>\n      <MainImage>\n        <TableReset>\n          <SubTableReset>\n            <LoginFont>メールアドレスを入力してください</LoginFont>\n            <form onSubmit={handleResetPassword}>\n              <LoginInput\n                type=\"text\"\n                name=\"E-mail\"\n                placeholder=\"メールアドレスを入力\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <br />\n              <ResetButton>送信</ResetButton>\n            </form>\n            {errorMessage && <ErrorFont>{errorMessage}</ErrorFont>}\n            {sendMessage && <SuccessFont>{sendMessage}</SuccessFont>}\n            <br />\n            <TextFont>\n              <Link to=\"/login\" style={{ color: \"#ffd740\", textDecoration: \"underline\" }}>\n                Login\n              </Link>\n              へ\n            </TextFont>\n          </SubTableReset>\n        </TableReset>\n      </MainImage>\n    </>\n  );\n};\n\nexport default ResetPassword;\n","import React, { useState } from \"react\";\nimport firebase from \"../config/Firebase\";\nimport axios from \"axios\";\nimport { homeProps } from \"@Modules\";\n\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { EditFont } from \"@Atoms/font\";\nimport { EditInput, TextArea } from \"@Atoms/input\";\nimport { UpdateButton, CancelButton, IconButton } from \"@Atoms/button\";\nimport {\n  TableButton,\n  TableDelete,\n  TableEdit,\n} from \"@Molecules/TableProfile\";\n\nconst Edit: React.FC<homeProps> = (props) => {\n  const [title, setTitle] = useState<string>(props.list.title);\n  const [text, setText] = useState<string>(props.list.text);\n  const [page, setPage] = useState<string>(props.list.page);\n\n  const FS = firebase.firestore().collection(\"text\");\n\n  // キャンセル = editing を true から false へ（Listへ切り替え）\n  const editTextCancel = () => {\n    props.editChange(props.list.id, !props.list.editing);\n  };\n\n  const editTextChange = async () => {\n    const url = \"https://www.googleapis.com/books/v1/volumes\";\n    const params = {\n      q: title,\n      maxResults: 1,\n    };\n    try {\n      const response = await axios.get(url, { params: params });\n      const item = response.data.items[0].id;\n      const imageUrl = `https://books.google.com/books/content?id=${item}&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api`;\n      \n      FS.doc(`${props.list.id}`).update({\n        title: title,\n        page: page,\n        text: text,\n        image: imageUrl,\n      });\n    } catch (err: any) {\n      alert(err.message);\n    }\n  };\n\n  // FireStoreのTextコレクションの各々の doc.id を取得し、削除\n  const handleDelete = () => {\n    FS.doc(`${props.list.id}`).delete();\n  };\n\n  return (\n    <>\n      <TableEdit>\n        <div>\n          <EditFont>タイトル</EditFont>\n          <EditInput\n            id=\"title\"\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </div>\n        <div>\n          <EditFont>読んだページ</EditFont>\n          <EditInput\n            id=\"page\"\n            type=\"text\"\n            value={page}\n            onChange={(e) => setPage(e.target.value)}\n          />\n        </div>\n        <EditFont>感想</EditFont>\n        <TextArea\n          id=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n        <TableDelete>\n          <IconButton onClick={handleDelete}>\n            <FontAwesomeIcon icon={faTrashAlt} />\n          </IconButton>\n        </TableDelete>\n        <TableButton>\n          <CancelButton onClick={editTextCancel}>キャンセル</CancelButton>\n          <UpdateButton onClick={editTextChange}>更新</UpdateButton>\n        </TableButton>\n      </TableEdit>\n    </>\n  );\n};\n\nexport default Edit;\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"../config/Firebase\";\nimport moment from \"moment\";\n\nimport { listComments, listProps } from \"@Modules\";\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Img, ImageTag } from \"@Atoms/image\";\nimport {\n  Font,\n  CommentFont,\n  TimeFont,\n  CommentUserFont,\n  CommentsFont,\n} from \"@Atoms/font\";\nimport { IconButton } from \"@Atoms/button\";\nimport {\n  TableItem,\n  TableTexts,\n  TableCommentsText,\n} from \"@Molecules/TableHome\";\nimport { TableIcon } from \"@Molecules/TableProfile\";\n\nconst List: React.FC<listProps> = (props) => {\n  const [count, setCount] = useState<number>(0);\n  const [comments, setComments] = useState<listComments[]>([]);\n  const [openComments, setOpenComments] = useState<boolean>(false);\n\n  const FS = firebase\n    .firestore()\n    .collection(\"text\")\n    .doc(`${props.list.id}`)\n    .collection(\"comments\");\n\n  useEffect(() => {\n    const unSub = FS.orderBy(\"createAt\", \"asc\").onSnapshot((snapshot) => {\n      const posts: any = snapshot.docs.map((doc) => {\n        return doc.data();\n      });\n      setComments(posts);\n    });\n\n    FS.get().then((doc) => {\n      setCount(doc.size);\n    });\n    return () => {\n      unSub();\n    };\n  }, []);\n\n  // 編集切り替え ＝ editingを false から true へ\n  const handleEditChange = () => {\n    props.editChange(props.list.id, !props.list.editing);\n  };\n  return (\n    <>\n      <ImageTag>\n        <Img src={props.list.image} alt=\"\" />\n      </ImageTag>\n      <TableTexts>\n        <TableItem>\n          <Font>タイトル：{props.list.title}</Font>\n          <Font>読んだページ数：{props.list.page}</Font>\n          <Font>感想：{props.list.text}</Font>\n        </TableItem>\n        <TimeFont>\n          {moment(props.list.createAt).format(\"A HH:mm YYYY/MM/DD\")}\n        </TimeFont>\n        <div>\n          <CommentFont onClick={() => setOpenComments(!openComments)}>\n            コメント（{count}）{openComments ? \"非表示\" : \"表示\"}\n          </CommentFont>\n        </div>\n        {openComments && (\n          <div>\n            {comments.map((list, id) => (\n              <TableCommentsText key={id}>\n                <div>\n                  <CommentUserFont>@{list.user}</CommentUserFont>\n                  <TimeFont>{moment(list.createAt).fromNow()}</TimeFont>\n                </div>\n                <CommentsFont>{list.text}</CommentsFont>\n              </TableCommentsText>\n            ))}\n          </div>\n        )}\n      </TableTexts>\n      <TableIcon>\n        <IconButton onClick={handleEditChange}>\n          <FontAwesomeIcon icon={faPen} />\n        </IconButton>\n      </TableIcon>\n    </>\n  );\n};\n\nexport default List;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../stores/userSlice\";\nimport Edit from \"@Components/Edit\";\nimport List from \"@Components/List\";\nimport firebase from \"../config/Firebase\";\n\nimport { Link } from \"react-router-dom\";\nimport { Text } from \"@Modules\";\n\nimport { Title } from \"@Atoms/title\";\nimport { Input } from \"@Atoms/input\";\nimport { SubFont } from \"@Atoms/font\";\nimport { HomeSearchButton, UpdateButton } from \"@Atoms/button\";\nimport { TableForm, TableList } from \"@Molecules/TableHome\";\nimport { TableProfile, TableText } from \"@Molecules/TableProfile\";\nimport { MainPage, MainTablePages } from \"@Organisms/MainPages\";\n\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst History: React.FC = () => {\n  const [homeText, setHomeText] = useState<Text[]>([]);\n  const [isDone, setIsDone] = useState<boolean>(false);\n  const [value, setValue] = useState<string>(\"\");\n\n  const user = useSelector(selectUser);\n\n  const FS = firebase.firestore().collection(\"text\");\n\n  useEffect(() => {\n    if (user) {\n      let isMounted = true;\n      FS.orderBy(\"createAt\", \"desc\").onSnapshot((snapshot) => {\n        const homes:any = snapshot.docs.map((doc) => {\n          // ドキュメント取得\n          return doc.data();\n        });\n        if (isMounted) {\n          setHomeText(homes);\n        }\n      });\n    }\n  }, [user]);\n\n  const handleFilter = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setHomeText(homeText.filter((list) => list.title === value));\n    setIsDone(!isDone);\n    setValue(\"\");\n  };\n\n  const handleRender = (e: React.FormEvent) => {\n    e.preventDefault();\n    FS.orderBy(\"date\", \"desc\").onSnapshot((snapshot) => {\n      const posts: any = snapshot.docs.map((doc) => {\n        return doc.data();\n      });\n      setHomeText(posts);\n    });\n  };\n  const editChange = (id: number, editing: boolean) => {\n    setHomeText(\n      homeText.map((texts) => {\n        if (texts.id === id) {\n          return {\n            ...texts,\n            editing,\n          };\n        }\n        return texts;\n      })\n    );\n  };\n  return (\n    <>\n      <MainPage>\n        <MainTablePages>\n          <TableText>\n            <Title>投稿履歴</Title>\n            <SubFont>\n              ・\n              <Link to=\"/profile\" style={{ textDecoration: \"underline\" }}>\n                Profile\n              </Link>\n              へ\n            </SubFont>\n            {isDone ? (\n              <UpdateButton onClick={handleRender}>再表示</UpdateButton>\n            ) : (\n              <TableForm onSubmit={handleFilter}>\n                <SubFont>検索</SubFont>\n                <Input\n                  type=\"text\"\n                  placeholder=\"タイトル名\"\n                  value={value}\n                  onChange={(e) => setValue(e.target.value)}\n                />\n                <HomeSearchButton>\n                  <FontAwesomeIcon icon={faSearch} />\n                </HomeSearchButton>\n              </TableForm>\n            )}\n          </TableText>\n          <TableList>\n            {homeText.map((list, id) => (\n              <div key={id}>\n                {list.user === user.displayName && (\n                  <TableProfile>\n                    {list.editing ? (\n                      <Edit key={id} list={list} editChange={editChange} />\n                    ) : (\n                      <List key={id} list={list} editChange={editChange} />\n                    )}\n                  </TableProfile>\n                )}\n              </div>\n            ))}\n          </TableList>\n        </MainTablePages>\n      </MainPage>\n    </>\n  );\n};\n\nexport default History;\n","import styled from \"styled-components\";\n\nconst LinkTag = styled.p`\n  font-size: 1.5rem;\n  margin: 30px 20px 20px 0;\n  @media (max-width: 420px) {\n    font-size: 1rem;\n    margin: 10px 20px;\n  }\n`;\n\nconst IconLinkTag = styled.span`\n  margin-left: 10px;\n  @media (max-width: 420px) {\n    margin: 0;\n    font-size: 1.5rem;\n    text-align: center;\n    display: block;\n  }\n`;\n\nexport { LinkTag, IconLinkTag };\n","import styled from \"styled-components\";\n\nconst TableMenu = styled.div`\n  display: flex;\n  @media (max-width: 420px) {\n    z-index: 1;\n    background-color: #fff;\n    width: 100%;\n    justify-content: center;\n    padding-bottom: env(safe-area-inset-bottom);\n  }\n`;\n\nexport default TableMenu;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser, updateUserProfile } from \"../stores/userSlice\";\nimport { Link, withRouter, RouteComponentProps } from \"react-router-dom\";\nimport firebase from \"firebase\";\n\nimport { GuestButton, SubLoginButton } from \"@Atoms/button\";\nimport { LinkTag, IconLinkTag } from \"@Atoms/link\";\nimport TableMenu from \"@Molecules/TableMenu\";\nimport {\n  faHome,\n  faUser,\n  faBook,\n  faSignOutAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Menu: React.FC<RouteComponentProps> = (props) => {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const GuestLogin = async () => {\n    await firebase\n      .auth()\n      .signInAnonymously()\n      .then(({ user }) => {\n        user?.updateProfile({\n          displayName: \"ゲストユーザー\",\n        });\n      });\n    dispatch(\n      updateUserProfile({\n        displayName: \"ゲストユーザー\",\n      })\n    );\n  };\n\n  const signOut = () => {\n    firebase.auth().signOut();\n    props.history.push(\"/home\");\n  };\n\n  return (\n    <TableMenu>\n      <LinkTag>\n        <Link to=\"/home\">\n          <IconLinkTag>\n            <FontAwesomeIcon icon={faHome} />\n          </IconLinkTag>\n          Home\n        </Link>\n      </LinkTag>\n      <LinkTag>\n        <Link to=\"/books\">\n          <IconLinkTag>\n            <FontAwesomeIcon icon={faBook} />\n          </IconLinkTag>\n          Books\n        </Link>\n      </LinkTag>\n      {user.uid ? (\n        <LinkTag>\n          <Link to=\"/profile\">\n            <IconLinkTag>\n              <FontAwesomeIcon icon={faUser} />\n            </IconLinkTag>\n            Profile\n          </Link>\n        </LinkTag>\n      ) : (\n        <LinkTag>\n          <Link to=\"/login\">\n            <IconLinkTag>\n              <FontAwesomeIcon icon={faSignOutAlt} />\n            </IconLinkTag>\n            Login\n          </Link>\n        </LinkTag>\n      )}\n      {user.uid ? (\n        <SubLoginButton onClick={signOut}>\n          <FontAwesomeIcon icon={faSignOutAlt} />\n          Log out\n        </SubLoginButton>\n      ) : (\n        <GuestButton onClick={GuestLogin}>\n          <FontAwesomeIcon icon={faUser} />\n          Guest\n        </GuestButton>\n      )}\n    </TableMenu>\n  );\n};\n\nexport default withRouter(Menu);\n","import styled from \"styled-components\";\n\nconst Main = styled.header`\n  background-color: #fff;\n  display: flex;\n  justify-content: space-between;\n  padding: 20px 30px;\n  position: fixed;\n  box-shadow: 0px 10px 10px -5px rgba(0, 0, 0, 0.5);\n  width: 97vw;\n  z-index: 1;\n  @media (max-width: 420px) {\n    padding: 10px;\n  }\n`;\n\nconst MainHeader = styled.div`\n  margin-right: 2rem;\n  @media (max-width: 420px) {\n    display: none;\n  }\n`;\n\nconst MainFooter = styled.footer`\n  background-color: #fff;\n  padding: 10px 0;\n  @media (max-width: 420px) {\n    display: none;\n  }\n`;\n\nconst SubFooter = styled.footer`\n  display: none;\n  @media (max-width: 420px) {\n    width: 100%;\n    background-color: #c6e377;\n    display: block;\n    position: fixed;\n    bottom: 0;\n  }\n`;\n\nexport { Main, SubFooter, MainHeader, MainFooter };\n","import React from \"react\";\nimport Menu from \"@Components/Menu\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nimport { HeaderTitle } from \"@Atoms/title\";\nimport { Main, MainHeader } from \"@Organisms/MainTable\";\n\nconst Header: React.FC = () => {\n  return (\n    <Main>\n      <HeaderTitle>\n        <Link to=\"/home\">\n          Read Out\n        </Link>\n      </HeaderTitle>\n      <MainHeader>\n        <Menu />\n      </MainHeader>\n    </Main>\n  );\n};\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport Menu from \"./Menu\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { FooterFont } from \"@Atoms/font\";\nimport { SubFooter, MainFooter } from \"@Organisms/MainTable\";\n\nconst Footer: React.FC = () => {\n  return (\n    <>\n      <MainFooter>\n        <FooterFont>@2021 suzuki.k / portfolio</FooterFont>\n      </MainFooter>\n      <SubFooter>\n        <Menu />\n      </SubFooter>\n    </>\n  );\n};\n\nexport default withRouter(Footer);\n","import styled from \"styled-components\";\n\nconst Table = styled.div`\n  background-color: #f9f3f3;\n  height: 100%;\n  min-height: 83.5vh;\n  padding-top: 7rem;\n  @media (max-width: 420px) {\n    min-height: 84.5vh;\n    max-height: 800px;\n    padding-top: 4rem;\n  }\n`;\n\nexport default Table;\n","import React from 'react';\n\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport { AuthService } from \"../Auth/AuthService\";\n\nimport Top from \"@Pages/Top\";\nimport SetUp from \"@Pages/SetUp\";\nimport Login from \"@Pages/Login\";\nimport Home from \"@Pages/Home\";\nimport Profile from \"@Pages/Profile\";\nimport BooksSearch from \"@Pages/BooksSearch\";\nimport ResetPassword from \"@Pages/ResetPass\";\nimport History from \"@Pages/History\";\n\nimport Header from \"@Components/Header\";\nimport Footer from \"@Components/Footer\";\n\nimport Table from \"@Templates/Table\";\n\nconst Router: React.FC = () => {\n  return (\n    <>\n      <BrowserRouter>\n        <AuthService>\n          <Header />\n        </AuthService>\n        <Table>\n          <Switch>\n            <AuthService>\n              <Route exact path=\"/\" component={Top} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/setup\" component={SetUp} />\n              <Route exact path=\"/books\" component={BooksSearch} />\n              <Route exact path=\"/home\" component={Home} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route exact path=\"/reset\" component={ResetPassword} />\n              <Route exact path=\"/history\" component={History} />\n            </AuthService>\n          </Switch>\n        </Table>\n        <AuthService>\n          <Footer />\n        </AuthService>\n      </BrowserRouter>\n    </>\n  )\n}\n\nexport default Router;","import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"./userSlice\";\n\n//Reducerの登録\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type RootState = ReturnType<typeof store.getState>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Router from \"./router\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./stores/store\";\nimport \"./css/base.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"names":["firebase","AuthContext","React","createContext","displayName","uid","AuthService","children","user","useSelector","selectUser","dispatch","useDispatch","unSub","auth","onAuthStateChanged","authUser","login","logout","Font","styled","p","SubFont","TextFont","LoginFont","EditFont","ErrorFont","SuccessFont","TimeFont","HomeTimeFont","LinkFont","span","SetUpFont","FooterFont","PostsFont","TotalFont","CommentFont","CommentUserFont","CommentsFont","Img","img","ImageTag","div","ImageSp","Button","button","GuestButton","LoginButton","SubLoginButton","SearchButton","HomeSearchButton","UpdateButton","CommentButton","CommentsMenuButton","CommentsDeleteButton","CancelButton","IconButton","SetUpButton","GoogleButton","TwitterButton","ProfileSetUpButton","ResetButton","Title","h1","HeaderTitle","MainTitle","LoginTitle","TableLogin","SubTableLogin","TableTop","SubTableTop","TableTopImages","TableTopImage","SubTableTopImage","MainPage","MainTablePages","MainImage","Top","props","GuestLogin","signInAnonymously","then","updateProfile","updateUserProfile","history","push","faSignOutAlt","faUser","homeImage","profileImage","Input","input","LoginInput","SearchInput","SetUpInput","EditInput","TextArea","textarea","CommentInput","TableSetUp","TableSetUpProfile","TableSetUpHome","SetUp","initialState","shortid","generate","title","setTitle","useState","text","setText","page","setPage","dates","setDates","textId","setTextId","FS","firestore","collection","date","Date","dateMonth","getMonth","dt","updateDay","getFullYear","getDate","e","preventDefault","url","params","q","maxResults","response","axios","get","imageUrl","data","items","id","doc","set","editing","createAt","getTime","image","err","message","target","value","color","Login","password","setPassword","email","setEmail","name","setName","inLogin","setInLogin","errorMessage","setErrorMessage","register","handleSubmit","errors","useForm","provider","GoogleAuthProvider","twitterProvider","TwitterAuthProvider","handleSignIn","signInWithEmailAndPassword","handleCreateUser","createUserWithEmailAndPassword","signInGoogle","signInWithPopup","catch","alert","signInTwitter","display","required","minLength","textDecoration","TableHome","TableForm","form","TableFormComment","TableCommentsText","TableCommentsMenu","TableCommentsDelete","TableList","TableTexts","TableItem","Comments","comment","setComment","comments","setComments","openComments","setOpenComments","count","setCount","openMenu","setOpenMenu","list","orderBy","onSnapshot","snapshot","posts","docs","map","size","moment","fromNow","faEllipsisV","delete","TableProfile","TableButton","TableIcon","TableDelete","TableText","TableEdit","TableTotal","TablePosts","Room","postText","setPostText","setValue","isDone","setIsDone","toggleMessage","setToggleMessage","isMounted","filter","faSearch","format","Chart","setDate","totalDays","setTotalDays","count1","setCount1","count2","setCount2","count3","setCount3","count4","setCount4","count5","setCount5","count6","setCount6","count7","setCount7","count8","setCount8","count9","setCount9","count10","setCount10","days","where","day","dateDays","i","unshift","previous","lastMonth","lastWeek","longDay","graphData","labels","datasets","borderColor","lineTension","label","graphOption","scales","xAxes","scaleLabel","labelString","yAxes","ticks","stepSize","option","responsive","Line","TotalDays","Profile","TotalPosts","TableSearch","ListSearch","ItemSearch","TextSearch","BooksSearch","searchString","setSearchString","searchResult","setSearchResult","searchGoogleBooks","isSuccess","error","result","String","item","volumeInfo","authors","publishedDate","TableReset","SubTableReset","ResetPassword","sendMessage","setSendMessage","sendPasswordResetEmail","Edit","faTrashAlt","editChange","update","List","handleEditChange","faPen","History","homeText","setHomeText","homes","handleFilter","handleRender","texts","LinkTag","IconLinkTag","TableMenu","Menu","signOut","faHome","faBook","withRouter","Main","header","MainHeader","MainFooter","footer","SubFooter","Header","Footer","Table","Router","Home","ReactDOM","render","document","getElementById"],"mappings":"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"}